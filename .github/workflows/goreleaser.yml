name: CI and Release

env:
  ATTINY_MAJOR: 1
  ATTINY_MINOR: 0
  ATTINY_PATCH: 1
  RELEASE_DOWNLOAD: https://github.com/TheCacophonyProject/attiny1616/releases/download/v${ATTINY_MAJOR}.${ATTINY_MINOR}.${ATTINY_PATCH}

on:
  push:
    branches: 
      - '**'  # Run on all branches
    tags:
      - '*'  # Trigger on new tags
  pull_request:
    branches: 
      - '**'  # Trigger on PRs to any branch

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setting up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.x'

      - name: Download ATtiny firmware and checksum
        run: |
          wget -O _release/attiny-firmware.hex ${{ env.RELEASE_DOWNLOAD }}/firmware.hex
          wget -O _release/attiny-firmware.hex.sha256 ${{ env.RELEASE_DOWNLOAD }}/firmware.hex.sha256

      - name: Set ATTINY_HASH
        run: echo "ATTINY_HASH=$(cut -d ' ' -f 1 < _release/attiny-firmware.hex.sha256)" >> $GITHUB_ENV

      - name: Go Mod Tidy
        run: go mod tidy

      - name: Check for Uncommitted Changes
        run: git diff --exit-code || (echo "Please run 'go mod tidy' to clean up the 'go.mod' and 'go.sum' files. Your go version should match the one used with travis." && exit 1)

      - name: Run Go Vet
        run: go vet ./...

      - name: Run Go Tests
        run: go test ./...
      
      - name: GoReleaser Check
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: '~> v2'
          args: check

      - name: GoReleaser Release
        uses: goreleaser/goreleaser-action@v6
        if: startsWith(github.ref, 'refs/tags/')
        with:
          distribution: goreleaser
          version: '~> v2'
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
